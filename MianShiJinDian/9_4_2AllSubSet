//构造所有子集等同于构造所有的二进制数
import java.util.ArrayList;

public class AllSubSet9_4_2 {

	public static void main(String[] args) {
		AllSubSet9_4_2 testAl = new AllSubSet9_4_2();
		ArrayList<Integer> input = new ArrayList<Integer>();
		input.add(1);
		input.add(2);
		input.add(3);
		ArrayList<ArrayList<Integer>> aa = testAl.getSubsets2(input);
		for (ArrayList<Integer> aaset : aa){
			System.out.println(aaset);
		}
	}

	public ArrayList<ArrayList<Integer>> getSubsets2(ArrayList<Integer> set){
		ArrayList<ArrayList<Integer>> allsubsets = new ArrayList<ArrayList<Integer>>();;
		int max = 1 << set.size(); //计算2的n次方
		for (int k = 0; k < max; k++){
			ArrayList<Integer> subset =  convertIntToSet(k, set);
			allsubsets.add(subset);
		}
		
		return allsubsets;
	}
	
	public static ArrayList<Integer> convertIntToSet(int x, ArrayList<Integer> set){
		ArrayList<Integer> subset = new ArrayList<Integer>();
		int index = 0;
		for (int k = x; k > 0; k >>= 1){
			if ((k & 1) == 1){
				subset.add(set.get(index));
			}
			index ++;
		}
		return subset;
	}
}
