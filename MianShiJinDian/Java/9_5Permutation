//在上一个排列中，插入新字符的任意可能的位置，就产生新的排列组合
import java.util.ArrayList;

public class Permutation9_5 {

	public static void main(String[] args) {
		Permutation9_5 testAl = new Permutation9_5();
		String testStr = "abc";
		ArrayList<String> as = testAl.getPerms(testStr);
		for (String word: as){
			System.out.println(word);
		}
	}

	public static ArrayList<String> getPerms(String str){
		if (str == null){
			return null;
		}
		ArrayList<String> permutations = new ArrayList<String>();
		if (str.length() == 0){ //终止条件
			permutations.add("");
			return permutations;
		}
		char first = str.charAt(0);
		String remainder = str.substring(1);
		ArrayList<String> words = getPerms(remainder);
		for (String word: words){
			for (int j = 0; j <= word.length(); j++){
				String s = insertCharAt(word, first, j);
				permutations.add(s);
			}
		}
		return permutations;
	}
	
	public static String insertCharAt(String word, char c, int i){
		String start = word.substring(0, i);
		String end = word.substring(i);
		return start + c + end;
	}
	
}
