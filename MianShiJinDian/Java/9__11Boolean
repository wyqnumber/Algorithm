
public class Boolean9_11 {

	public static void main(String[] args) {
		Boolean9_11 testAl = new Boolean9_11();
	}
	
	
	public int f(String exp, boolean result, int s, int e){
		if (s == e){
			if (exp.charAt(s) == '1' && result){
				return 1;
			}else if (exp.charAt(s) == '0' && !result){
				return 1;
			}
			return 0;
		}
		int c = 0;
		if (result){
			for (int i = s + 1; i <= e; i += 2){
				char op = exp.charAt(i);
				if (op == '&'){
					c += f(exp, true, s, i - 1) * f(exp, true, i + 1, e);
				}else if(op == '|'){
					c += f(exp, true, s, i - 1) * f(exp, false, i + 1, e);
					c += f(exp, false, s, i - 1) * f(exp, true, i + 1, e);
					c += f(exp, true, s, i - 1) * f(exp, true, i + 1, e);
				}else if (op == '^'){
					c += f(exp, true, s, i - 1) * f(exp, false, i + 1, e);
					c += f(exp, false, s, i - 1) * f(exp, true, i + 1, e);
				}
			}
		}else{
			for (int i = s + 1; i <= e; i += 2){
				char op = exp.charAt(i);
				if (op == '&'){
					c += f(exp, false, s, i - 1) * f(exp, true, i + 1, e);
					c += f(exp, true, s, i - 1) * f(exp, false, i + 1, e);
					c += f(exp, false, s, i - 1) * f(exp, false, i + 1, e);
				} else if (op == '|'){
					c += f(exp, false, s, i - 1) * f(exp, false, i + 1, e);
				} else if (op == '^'){
					c += f(exp, true, s, i - 1) * f(exp, true, i + 1, e);
					c += f(exp, false, s, i - 1) * f(exp, false, i + 1, e);
				}
			}
		}
		return c;
		
	}
	
	public int fDP(String exp, boolean result, int s, int e, HashMap<String, Integer> q){
		String key = "" + result + s + e;
		if (q.containsKey(key)){
			return q.get(key);
		}
		
		if (s == e){
			if (exp.charAt(s) == '1' && result == true){
				return 1;
			}else if (exp.charAt(s) == '0' && result == false){
				return 1;
			}
			return 0;
		}
		int c = 0;
		if (result){
			for (int i = s + 1; i <= e; i += 2){
				char op = exp.charAt(i);
				if (op == '&'){
					c += fDP(exp, true, s, i - 1, q) * fDP(exp, true, i + 1, e, q);
				} else if (op == '|'){
					c += fDP(exp, true, s, i - 1, q) * fDP(exp, false, i + 1, e, q);
				}
			}
		}
		return c;
	}
	
}
